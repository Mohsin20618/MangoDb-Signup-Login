{"version":3,"sources":["Components/Dashboard/Dashboard.jsx","core.js","Components/Signup/Signup.jsx","Components/Login/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","c","localStorage","getItem","JSON","parse","name","email","baseUrl","window","location","hostname","split","validationSchema","yup","required","password","min","max","Signup","formik","useFormik","initialValues","onSubmit","values","axios","post","then","res","console","log","data","alert","catch","err","style","margin","handleSubmit","Stack","spacing","TextField","fullWidth","color","id","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","Login","history","useHistory","setItem","stringify","push","App","Navbar","bg","Container","Brand","onClick","Nav","className","Link","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30eb6970.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Dashboard() {\r\n    let c=localStorage.getItem('user')\r\n    c=JSON.parse(c)\r\n    if(c){\r\n    return (\r\n        <div>\r\n          <h1>{c.name}</h1>\r\n          <h1>{c.email}</h1>\r\n        </div>\r\n    )\r\n}\r\nelse{\r\n    return (\r\n        <div>\r\n          You need to Login first\r\n        </div>\r\n    )  \r\n}\r\n}\r\n\r\nexport default Dashboard\r\n\r\n","const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport * as yup from \"yup\";\r\nimport { baseUrl } from \"./../../core\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter your name\").required(\"Name is required\"),\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .max(10, \"No more then 10\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nfunction Signup() {\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: function (values) {\r\n      axios\r\n        .post(`${baseUrl}/api/v1/signup`, {\r\n          name: values.name,\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n          alert(\"Signup Successfully\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem\" }}>\r\n      <h1>Signup page</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Full Name\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={formik.touched.name && formik.errors.name}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Signup\r\n          </Button>\r\n        </Stack>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport * as yup from \"yup\";\r\nimport { baseUrl } from \"./../../core\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .max(10, \"No more then 10\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values);\r\n\r\n      axios\r\n        .post(`${baseUrl}/api/v1/login`, {\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n          localStorage.setItem('user',JSON.stringify(res.data))\r\n          alert(\"Signin Successfully\");\r\n          if (res.data.email) {\r\n            history.push(\"/\");\r\n          }\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem\" }}>\r\n      <h1>Login page</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Stack>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport Signup from \"./Components/Signup/Signup\";\nimport Login from \"./Components/Login/Login\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\n\nfunction App() {\n  let history = useHistory();\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand\n            onClick={() => {\n              history.push(\"/\");\n            }}\n          >\n            Database\n          </Navbar.Brand>\n          <Nav className=\"me-auto\">\n            <Nav.Link\n              onClick={() => {\n                history.push(\"/\");\n              }}\n            >\n              Dashboard\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                history.push(\"/Sign\");\n              }}\n            >\n              Signup\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                history.push(\"/Log\");\n              }}\n            >\n              Login\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n      <Switch>\n        <Route path=\"/Log\">\n          <Login />\n        </Route>\n\n        <Route path=\"/Sign\">\n          <Signup />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}