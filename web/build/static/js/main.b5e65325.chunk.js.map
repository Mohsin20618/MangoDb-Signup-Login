{"version":3,"sources":["Components/Dashboard/Dashboard.jsx","core.js","Components/Signup/Signup.jsx","Components/Login/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","baseUrl","window","location","hostname","split","validationSchema","yup","name","required","email","password","min","max","Signup","formik","useFormik","initialValues","onSubmit","values","axios","post","then","res","console","log","data","catch","err","style","margin","handleSubmit","Stack","spacing","TextField","fullWidth","color","id","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","Login","history","useHistory","push","App","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","mr","Typography","component","onClick","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5e65325.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <div>\r\n            <h1>Dashboard Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n","const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","\r\nimport axios from 'axios';\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../core\"\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n});\r\n\r\nfunction Signup() {\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: function (values) {\r\n            axios.post(`${baseUrl}/api/v1/signup`, {\r\n                name: values.name,\r\n                email: values.email,\r\n                password: values.password,\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                })\r\n                .catch((err)=>{\r\n                    console.log(err)\r\n                })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div style={{ margin: \"2rem\" }}>\r\n            <h1>Signup page</h1>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Stack spacing={2}>\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Full Name\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"name\"\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                        helperText={formik.touched.name && formik.errors.name}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"filled-basic\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n\r\n                        name=\"password\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    />\r\n\r\n                    <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Signup</Button>\r\n                </Stack>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../core\"\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values)\r\n\r\n      axios.post(`${baseUrl}/api/v1/login`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n\r\n          if(res.data.email){\r\n            history.push(\"/\")\r\n          }\r\n\r\n\r\n        })\r\n\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem\" }}>\r\n      <h1>Login page</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n        </Stack>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login\r\n","import './App.css';\nimport Dashboard from './Components/Dashboard/Dashboard'\nimport Signup from './Components/Signup/Signup'\nimport Login from './Components/Login/Login'\nimport {\n\n  Switch,\n  Route,\n\n} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\n\n\nfunction App() {\n  let history = useHistory();\n  return (\n    <>\n    <Box sx={{ flexGrow: 1 }}>\n    <AppBar position=\"static\" color='secondary'>\n      <Toolbar>\n        <IconButton\n          size=\"large\"\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          sx={{ mr: 2 }}\n        >\n         \n        </IconButton>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n         Database\n        </Typography>\n        <Button color=\"inherit\" onClick={()=>{history.push(\"/\")}}>Dashboard</Button>\n        <Button color=\"inherit\" onClick={()=>{history.push(\"/Sign\")}}>Signup</Button>\n        <Button color=\"inherit\" onClick={()=>{history.push(\"/Log\")}}>Login</Button>\n       \n      </Toolbar>\n    </AppBar>\n  </Box>\n  <Switch>\n        <Route path=\"/Log\">\n          <Login/>\n        </Route>\n\n        <Route path=\"/Sign\">\n          <Signup/>\n        </Route>\n\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n\n      </Switch>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}